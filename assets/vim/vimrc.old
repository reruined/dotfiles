call plug#begin('~/.vim/plugged')
Plug 'https://github.com/ctrlpvim/ctrlp.vim.git'
Plug 'https://github.com/morhetz/gruvbox.git'
Plug 'https://github.com/scrooloose/syntastic.git'
Plug 'https://github.com/Chiel92/vim-autoformat.git'
Plug 'https://github.com/airblade/vim-gitgutter.git'
Plug 'https://github.com/tpope/vim-fugitive.git'
Plug 'https://github.com/ntpeters/vim-better-whitespace.git'
Plug 'https://github.com/tpope/vim-repeat.git'
Plug 'https://github.com/godlygeek/tabular.git'

" JS/HTML5 specific
Plug 'https://github.com/pangloss/vim-javascript.git'
Plug 'https://github.com/othree/html5.vim.git'
call plug#end()

"set nocompatible
"set wrap
"set linebreak
"set number
"set relativenumber
"set noshowmatch
"set noswapfile
"set showcmd
"set hlsearch
"set incsearch
"set ignorecase
"set autoread
"set cursorline
"set hidden
"set lazyredraw
"set wildmenu
"set showmode
"set numberwidth=6
"set mouse=a
"set t_Co=256
"set background=dark
"set laststatus=2
"set colorcolumn=80
"set history=10000
"set backspace=indent,eol,start
"set undofile
"set undolevels=500
"set undoreload=55

" Indentation
" set autoindent
" set copyindent
" set preserveindent
" set nosmartindent
" set nocindent
" set expandtab
" set softtabstop=-2
" set noshiftround
" set shiftwidth=3
" set tabstop=3
" set smarttab

"colo gruvbox

"filetype on
"filetype plugin on
"filetype indent on

let maplocalleader="\\"
let mapleader = "\<space>"
let g:syntastic_javascript_checkers = ['jshint', 'jscs']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_loc_list_height = 10
let g:gitgutter_sign_column_always = 1
let g:ctrlp_show_hidden = 1
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
let g:ctrlp_match_current_file = 1
let g:ctrlp_switch_buffer = 0
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:10,results:20'
let g:ctrlp_by_filename = 1

iabbrev fn function() {<cr>}<esc>O

nnoremap gb :ls<CR>:buffer<Space>
nnoremap <space> <nop>
nnoremap _ ddkP
nnoremap - ddp
nnoremap H 0
nnoremap L $
nnoremap <enter> o<esc>
nnoremap <bs> ddk
nnoremap <leader><c-u> viwU
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>2 viw<esc>a"<esc>hbi"<esc>lel
nnoremap <leader>" viW<esc>a"<esc>hBi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel
nnoremap <leader>* viW<esc>a'<esc>hBi'<esc>lel
vnoremap <leader>2 <esc>`>a"<esc>`<i"<esc>
vnoremap <leader>' <esc>`>a'<esc>`<i'<esc>
inoremap <c-d> <esc>ddi
inoremap <c-u> <esc>viwUi
inoremap <esc> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>


" Make enter behave properly when mapped
autocmd CmdwinEnter * nnoremap <CR> <CR>
autocmd BufReadPost quickfix nnoremap <CR> <CR>

" Strip whitespace automatically
autocmd FileType javascript,vim,typescript,html,json autocmd BufWritePre <buffer> StripWhitespace
autocmd VimEnter * DisableWhitespace

" Disable linewrap when diffing
autocmd FilterWritePre * if &diff | setlocal wrap< | endif

" Put plugins and dictionaries in this dir (also on Windows)
" Keep undo history across sessions by storing it in a file
let vimDir = '$HOME/.vim'
let &runtimepath.=','.vimDir
if has('persistent_undo')
   let myUndoDir = expand(vimDir . '/undo')
   " Create dirs
   call system('mkdir ' . vimDir)
   call system('mkdir ' . myUndoDir)
   let &undodir = myUndoDir
   set undofile
endif

echo ">^.^<"
